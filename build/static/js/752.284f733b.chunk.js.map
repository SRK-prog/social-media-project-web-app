{"version":3,"file":"static/js/752.284f733b.chunk.js","mappings":"wPAKe,SAASA,EAAc,GAAwB,IAAD,IAArBC,EAAO,EAAPA,QAASC,EAAQ,EAARA,SAC/C,GAKIC,EAAAA,EAAAA,MAJFC,EAAQ,EAARA,SACAC,EAAY,EAAZA,aACAC,EAAS,EAATA,UACaC,EAAM,EAAnBC,UAAaD,OAEf,GAA0BE,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACtB,GAAkCF,EAAAA,EAAAA,WAAS,GAAM,eAA1CG,EAAS,KAAEC,EAAY,MAE9BC,EAAAA,EAAAA,YAAU,WACRC,SAASC,MAAQ,gBACnB,GAAG,KAEHF,EAAAA,EAAAA,YAAU,WACR,IAAMG,EAAe,IAAIC,gBAAwB,OAARhB,QAAQ,IAARA,OAAQ,EAARA,EAAUiB,QAC7CC,EAASH,EAAaI,IAAI,MAC1BC,EAAQL,EAAaI,IAAI,SAC1BnB,EAASiB,QAAWC,GAAWE,GAAOrB,EAAQsB,KAAK,YAE1D,GAAG,CAACrB,EAASiB,SAEb,IAAMK,EAAQ,yCAAG,4GAKwB,OALfC,EAAQ,EAARA,SACxBZ,GAAa,GACbF,EAAS,IACHM,EAAe,IAAIC,gBAAwB,OAARhB,QAAQ,IAARA,OAAQ,EAARA,EAAUiB,QAC7CC,EAASH,EAAaI,IAAI,MAC1BC,EAAQL,EAAaI,IAAI,SAAS,EAAD,gBAEdK,EAAAA,EAAAA,KACrB,aACA,CAAED,SAAAA,GACF,CAAEE,OAAQ,CAAEP,OAAAA,EAAQE,MAAAA,KACpB,KAAD,WACO,QALAM,EAAI,EAAJA,YAKA,IAAJA,GAAAA,EAAMC,SAAS5B,EAAQsB,KAAK,UAAU,kDAE1CZ,GACE,4BAAe,QAAf,OAAOmB,gBAAQ,OAAM,QAAN,EAAf,EAAiBF,YAAI,WAArB,IAAuBC,WAAO,4BACb,QADa,EAC5B,KAAOC,gBAAQ,OAAM,QAAN,EAAf,EAAiBF,YAAI,WADO,EAC5B,EAAuBlB,QACvB,yBACF,QAEkB,OAFlB,UAEFG,GAAa,GAAO,6EAEvB,gBAtBa,sCAwBd,OACE,gBAAKkB,UAAU,QAAO,UACpB,kBACEA,UAAU,4EACVP,SAAUnB,EAAamB,GAAU,WAEjC,gBAAKO,UAAU,4BAA2B,UACxC,eAAIA,UAAU,oCAAmC,SAAC,sBAEpD,gBAAKA,UAAU,4BAA2B,SAAC,6BAC3C,gBAAKA,UAAU,OAAM,UACnB,SAAC,KAAS,QACRC,KAAK,WACLC,WAAS,EACTC,MAAM,WACNC,QAAQ,WACRzB,QAASH,EAAOkB,SAChBW,WAAkB,OAAN7B,QAAM,IAANA,GAAgB,QAAV,EAANA,EAAQkB,gBAAQ,WAAV,EAAN,EAAkBI,SAC1BzB,EAAS,WAAY,CACvBiC,SAAU,+BAchB,gBAAKN,UAAU,OAAM,UACnB,SAAC,KAAS,QACRC,KAAK,WACLC,WAAS,EACTC,MAAM,mBACNC,QAAQ,WACRzB,QAASH,EAAO+B,gBAChBF,WAAkB,OAAN7B,QAAM,IAANA,GAAuB,QAAjB,EAANA,EAAQ+B,uBAAe,WAAjB,EAAN,EAAyBT,SACjCzB,EAAS,kBAAmB,CAC9BiC,SAAU,gCACVE,SAAU,CACRC,cAAe,SAACC,GAAK,OACnBA,IAAUnC,IAAYmB,UAAY,yBAAyB,UAKrE,gBAAKM,UAAU,OAAM,UACnB,SAAC,IAAM,CACLI,QAAQ,YACRF,WAAS,EACTF,UAAU,OACVW,MAAO,CAAEC,MAAO,QAASC,gBAAiB,WAC1CZ,KAAK,SACLa,SAAUjC,EAAU,SAEnBA,GACC,gBAAKmB,UAAU,UAAS,UACtB,gBAAKA,UAAU,oBAGjB,gBAIHrB,IACD,gBAAKqB,UAAU,gDAA+C,SAC3DrB,QAMb,C","sources":["routes/resetPassword/index.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport BASE_URL from \"../../api/baseUrl\";\r\n\r\nexport default function ResetPassword({ history, location }) {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    getValues,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Reset Password\";\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const searchParams = new URLSearchParams(location?.search);\r\n    const userId = searchParams.get(\"id\");\r\n    const token = searchParams.get(\"token\");\r\n    if (!location.search || !userId || !token) history.push(\"/error404\");\r\n    // eslint-disable-next-line\r\n  }, [location.search]);\r\n\r\n  const onSubmit = async ({ password }) => {\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n    const searchParams = new URLSearchParams(location?.search);\r\n    const userId = searchParams.get(\"id\");\r\n    const token = searchParams.get(\"token\");\r\n    try {\r\n      const { data } = await BASE_URL.post(\r\n        \"/reset/new\",\r\n        { password },\r\n        { params: { userId, token } }\r\n      );\r\n      if (data?.message) history.push(\"/login\");\r\n    } catch (error) {\r\n      setError(\r\n        error?.response?.data?.message ||\r\n          error?.response?.data?.error ||\r\n          \"Something went wrong!\"\r\n      );\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-16\">\r\n      <form\r\n        className=\"rounded-lg mx-auto px-3 pt-2.5 pb-6 border border-darkGray-30 max-w-112.5\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <div className=\"flex justify-between mt-2\">\r\n          <h2 className=\"text-xl text-center font-semibold\">Reset Password</h2>\r\n        </div>\r\n        <div className=\"mt-2 text-gray-80 text-sm\">Enter your new password</div>\r\n        <div className=\"mt-4\">\r\n          <TextField\r\n            type=\"password\"\r\n            fullWidth\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            error={!!errors.password}\r\n            helperText={errors?.password?.message}\r\n            {...register(\"password\", {\r\n              required: \"Password is required.\",\r\n              // pattern: {\r\n              //   value:\r\n              //     /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{7,}$/,\r\n              //   message:\r\n              //     \"Password must include letters, numbers and special characters.\",\r\n              // },\r\n              // minLength: {\r\n              //   value: 8,\r\n              //   message: \"Password must be at least 8 characters.\",\r\n              // },\r\n            })}\r\n          />\r\n        </div>\r\n        <div className=\"mt-4\">\r\n          <TextField\r\n            type=\"password\"\r\n            fullWidth\r\n            label=\"confirm password\"\r\n            variant=\"outlined\"\r\n            error={!!errors.confirmPassword}\r\n            helperText={errors?.confirmPassword?.message}\r\n            {...register(\"confirmPassword\", {\r\n              required: \"Confirm password is required.\",\r\n              validate: {\r\n                passwordEqual: (value) =>\r\n                  value === getValues().password || \"Passwords must be same.\",\r\n              },\r\n            })}\r\n          />\r\n        </div>\r\n        <div className=\"mt-5\">\r\n          <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            className=\"h-10\"\r\n            style={{ color: \"white\", backgroundColor: \"#3a8fde\" }}\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? (\r\n              <div className=\"h-8 w-8\">\r\n                <div className=\"circle-loader\"></div>\r\n              </div>\r\n            ) : (\r\n              \"Confirm\"\r\n            )}\r\n          </Button>\r\n        </div>\r\n        {!!error && (\r\n          <div className=\"text-red-10 text-sm mb-1.5 mt-2.5 text-center\">\r\n            {error}\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ResetPassword","history","location","useForm","register","handleSubmit","getValues","errors","formState","useState","error","setError","isLoading","setIsLoading","useEffect","document","title","searchParams","URLSearchParams","search","userId","get","token","push","onSubmit","password","BASE_URL","params","data","message","response","className","type","fullWidth","label","variant","helperText","required","confirmPassword","validate","passwordEqual","value","style","color","backgroundColor","disabled"],"sourceRoot":""}